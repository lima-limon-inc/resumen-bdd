#+title: resumen

* Modelo logico relacional

- Paso intermedio entre el modelo conceptual y el interno
- Se basa en *las relaciones*. Nada mas

** Definiciones
*** Dominio
Conjunto de valores homogeneos
*** Producto cartesiano
Conjunto de todos los pares posibles entre los dominios
*** Relacion
*Subconjunto del producto cartesino*
*** Atributo
Miembros de la relacion.
*** Tupla
Una instancia de una relacion
*** Cardinalidad
Cantidad de tuplas de una relacion
*** Superclave
Subconjunto dentro de los atributos en un mismo tipo de tupla que *si o si* van a difererir.
*** Clave candidato
Un subconjunto de la superclave que es minimal.
*** Clave primaria
Algun elemento *arbitrario* de las claves candidatas que se usa como clave identificable "principal".

** Representacion
La representacion canonica de este modelo es el de la tabla. Cada atributo de la relacion es una columna y cada tupla una fila.

** Restricciones
*** Dominio
- Un valor debe pertenecer al dominio del atributo. No podes poner un string en una columna donde van ints.
- Se admiten ~NULL~ s
*** Unicidad
- No puede haber dos o mas tuplas iguales, cada tupla debe ser unica.
- Si no tenes ninguna superclave natural, podes generar un ID para poder distinguir las tuplas.
  - Pros:
    - Siempre funciona para diferenciar una tupla de otra.
  - Contra:
    - La BDD tiene que manejar la generacion e incremento del ID
    - El ID puede leaker informacion de order de ingreso a la BDD
*** Integridad de Entidad
La clave primaria *no* puede tomar valores nulos

*** Integridad de Referencial
Cuando se usa un valor de una tupla fuera de su origen (es decir, se una foreign key), ese valor *tiene que pertenecer al conjunto de la relacion*; no puede tomar *otro valor del dominio*.

Es decir, si vos usas un valor de tabla A como foreign key en tabla B, ese valor tiene que estar en la tabla A. No podes usar un valor que no este en la tabla aunque sea del mismo tipo

** Operaciones
Hay 4 operaciones. Algunas operaciones /pueden/ romper las restricciones del y en ese caso romper la integridad.

La siguiente tabla muestra que restricciones pueden romper cada operacion.

| Operacion    | Dominio | Unicidad | Int. Entidad | Int. Referencial |
|--------------+---------+----------+--------------+------------------|
| Consulta     | No      | No       | No           | No               |
| Eliminacion  | No      | No       | No           | Depende[fn:1]    |
| Insercion    | Si      | Si       | Si           | Depende[fn:2]    |
| Modificacion | Si      | Si       | Si           | Si               |

* Footnotes
[fn:2] Si la tupla que insertas usa de Foreign Key un valor que no existe, entonces si

[fn:1] Si la tupla que borras es la Foreign Key de otra tupla, entonces si se puede romper
